(터미널에서)
hostname : 호스트이름
pwd : 현재 위치 출력
. : 현재 디렉토리 위치
.. : 상위 디렉토리 위치

ls -a : 숨겨놓은 파일들을 확인하고자 할 경우
ls -al : 파일 및 폴더 다 출력하고 할 경우

ls -al 명령어를 실행 헀을 때 권한의 맨 앞은 d 는 디렉토리, - 는 파일이고 그 다음의 유저, 그룹, 크기이다.

ls -alSr : 오름차순 정렬을 시켜준다. (r 은 리버스)
ls -alS : 내림차순 정렬을 시켜준다. (S 은 Sort)

ls -alSrh : 크기를 기준으로 오름차순 정렬 시켜준다.
ls -alSh : 크기를 기준으로 내림차순 정렬 시켜준다.

ls -alSrht : 시간을 기준으로 오름차순 정렬 시켜준다. (t 는 time)
ls -alSht : 시간을 기준으로 내림차순 정렬 시켜준다.

su - centos :다른 유저에서 centos 유저로 이동할 경우
su - root : 다른 유저에서 root 유저로 이동할 경우 (관리자 계정 접속이라 그런지 password 를 물어봄)

mkdir data : 현재 디렉토리에 data 라는 폴더를 생성한다.

mkdir -p data1/data2 : -p 라는 옵션을 주면 현재 디렉토리에 data1 폴더가 없어도 생성되며 data1 안에 data2 폴더를 생성해준다.

ll : ls -al 명령어와 같다.

rmdir data_new : 현재 디렉토리에 있는 data_new 라를 폴더를 삭제한다. (빈 폴더만 지우는 명령어)
rmdir data : data 안에 폴더나 파일들이 있는데 그냥 이렇게 실행 할 경우 에러난다.

rm : 파일 삭제와 폴더 삭제를 같이 할 수 있는 명령어이다.
rm -r data : data 안에 폴더나 파일들이 있어도 이렇게 실행하면 다 삭제된다. (내용물이 있는 폴더 삭제,모두 삭제)

touch : 샘플 파일을 생성하겠다는 의미이다. 파일 생성하는 명령어이다.
-rw-rw-r-- : 파일형식 (1번째 알파벳), 소유자 유저의 권한 (2~4번째 알파벳), 그룹의 속한 유저들의 권한 (5~7번째 알파벳), 게스트 유저의 권한 (8~10번째 알파벳) (소유자, 그룹 외의 유저)

ll data : data 라는 폴더안에 내용을 확인하는 명령어.

redirection : 화면 출력되는 결과를 파일로 저장하는 명령어 (ls -alt >> ex01.txt)
[sentos@centos ~]$ ls -alt >> ex01.txt
>> : 없으면 파일을 생성하고 있으면 기존 파일뒤에 덧붙이겠다.
>  : 파일을 생성하겠다. 있으면 그냥 덮어쓰겠다.

[sentos@centos ~]$ ls -lS >> ex01.txt 
[sentos@centos ~]$ cat ex01.txt

[sentos@centos ~]$ ls -lSr > ex01.txt (내용이 있으면 덮어쓰기)
[sentos@centos ~]$ cat ex01.txt

head 
텍스트 형식으로 작성된 문서파일의 앞 몇줄을 화면에 출력하는 기능
[sentos@centos ~]$ head -2 ex01.txt

tail
텍스트 형식으로 작성된 문서파일의 마지막 몇줄을 화면에 출력하는 기능
[sentos@centos ~]$ tail -2 ex01.txt

[sentos@centos ~]$ head -5 ex01.txt >> ex02.txt (redirection)

wc
Word Count 파일안의 라인수, 단어수 (공백문자를 기준으로), 문자수를 출력하는 기능

[sentos@centos ~]$ wc ex01.txt
[sentos@centos ~]$ wc -l ex01.txt (-l 옵션을 주면 라인수만 출력)
[sentos@centos ~]$ wc -w ex01.txt (-w 옵션을 주면 단어수만 출력)
[sentos@centos ~]$ wc -c ex01.txt (-c 옵션을 주면 문자수만 출력)

문서안에 내용을 보는 명령어 cat 대신 more 라는 명령어도 있다. more 는 많은 내용을 볼 때 사용한다.
more 에서 스페이스바, d는 조금씩 밑으로 내려가고 f 는 많이 내려가고 b 는 다시 위로 올라간다.
ctrl + c 를 누르면 more 에서 빠져나온다.

[root@centos ~]# find -name '*.txt' (해당경로 아래로 확장자가 txt 인 파일을 찾는 방법)

[root@centos ~]# find -name '*.txt' >> find.txt (해당경로 아래로 확장자가 txt 인 파일을 찾아서 파일로 저장시킨다.)

[root@centos /]# cp -v find.txt /root (root 라는 디렉토리에 find.txt 라는 파일을 카피하는 명령어) (같은 파일이 있으면 진짜 할거냐고 물어본다.)

[sentos@centos data1]$ cp ex01.txt ex02.txt (ex01.txt 라는 파일을 ex02.txt 라는 파일로 복사)

[sentos@centos ~]$ cp -r data1 data2 (data1 라는 디렉토리를 data2 라는 디렉토리로 복사. 디렉토리 복사 할때는 -r 이라는 옵션을 설정해주어야 한다.)

[sentos@centos ~]$ man cp (cp 라는 명령어의 사용법을 출력한다. help 라는 기능같음)

[sentos@centos ~]$ mv ex01.txt ex05.txt (ex01.txt 라는 파일을 ex05.txt 라는 파일로 이동. rename 으로도 사용)

[sentos@centos data1]$ diff ex01.txt ex02.txt (두 파일의 차이점을 리턴한다. 같은부분은 출력 안되고 다른부분이 출력된다.)

diff
두파일의 차이점을 출력하는 기능

[sentos@centos data1]$ comm ex01.txt ex02.txt (교집합과 차이점의 원소들이 열별로 출력)
[sentos@centos data1]$ comm -1 ex01.txt ex02.txt (교집합과 ex02.txt 의 원소 열별로 출력)
[sentos@centos data1]$ comm -2 ex01.txt ex02.txt (교집합과 ex01.txt 의 원소 열별로 출력)
[sentos@centos data1]$ comm -3 ex01.txt ex02.txt (교집합을 제외한 원소들 열별로 출력)

comm
두개의 파일의 차이를 비교하는 기능
comm -1 ex01.txt ex02.txt
ex02.txt - ex01.txt

comm -2 ex01.txt ex02.txt
ex01.txt - ex02.txt

comm -3 ex01.txt ex02.txt
ex01.txt, ex01.txt 교집합만 출력 안함

[root@centos network-scripts]# vi ifcfg-enp0s8 (어제는 ifcfg-enp0s3 파일을 편집해주었고 오늘은 ifcfg-enp0s8 파일을 편집) (어제 ifcfg-enp0s3 파일을 ONBOOT=no 를 ONBOOT=yes 로 수정)

(ifcfg-enp0s8 파일의 vi 편집기에서)
BOOTPROTO=dhcp 이 부분을 BOOTPROTO=none 으로 수정 (자동으로 동적 할당되면 안되기 때문에 고정으로 사용하기위해 none 으로 수정)
ONBOOT=yes (다음과 같이 수정)
NM_CONTROLLED=yes (없는 설정 이런식으로 추가)
NETMASK=255.255.255.0 (없는 설정 이런식으로 추가)
IPADDR=192.168.56.101 (없는 설정 이런식으로 추가)

[root@centos network-scripts]# service network restart (위에ifcfg-enp0s8 파일 수정 후 이 명령어 실행)

윈도우에 있는 주소를 가지고 가상환경에서 가져다가 사용하는 것이다.

centos 의 설정에 네트워크에 어댑터2가 ifcfg-enp0s8 파일이다.
가상환경의 고정 아이피 주소는 virtualbox 의 환경설정의 네트워크의 호스트 전용 네트워크 편집 (세번째 아이콘) 에서 DHCP 서버의 최저 주소 한계와 최고 주소 한계의 사이 주소를 할당 할 수 있다. (고정 주소 사용 범위)

[root@centos network-scripts]# vi /etc/hosts
192.168.56.101 centos (/etc/hosts 파일을 vi 편집기로 들어가서 이 부분만 추가해주고 저장 후 빠져나온다.)
[root@centos network-scripts]# reboot

이다음 방화벽을 해지하는 작업을 해주어야 한다.
방화벽 해지
[root@centos ~]# iptables -F
[root@centos ~]# iptables -L

[root@centos ~]# java -version
[root@centos ~]# mkdir -p /usr/java (자바라는 디렉토리 생성)

리눅스에서는 tar 라는 파일로 압축한다.

[root@centos java]# cp -v /media/sf_linux/jdk-7u80-linux-x64.tar.gz /usr/java (java 라는 폴더로 압축파일 copy)
[root@centos java]# cd /usr/java (java 라는 폴더로 이동)
[root@centos java]# tar xvfz jdk-7u80-linux-x64.tar.gz (압축파일 압축풀기, xvfz 는 압축푸는 옵션)

하둡이란 분산 파일 시스템이다. 구글에서 처음 만들고 논문을 오픈했는데 야후에 근무하는 사람이 발전시켰다. 자바 베이스이다.
물리적으로 3개의 서버로 분산시키고 네트워크로 클라우드로 묶는다.
저장할 때 조각조각 슬라이스가 되서 분산 저장시킨다.
원본의 데이터를 다른 저장소에도 저장해놓는 것을 미러링한다고 한다. 가용성이 좋아진다. 읽고 쓰기 성능이 좋아진다.

환경설정 (환경변수 path 설정) 해주어야 한다. (/usr/java/jdk1.7.0_80 경로 기억)

[root@centos java]# vi /etc/profile (아래처럼 추가 입력해주고 저장 후 빠져나온다.)
export JAVA_HOME=/usr/java/jdk1.7.0_80
export PATH=$PATH:$JAVA_HOME/bin
export CLASS_PATH="."

[root@centos jdk1.7.0_80]# source /etc/profile (실행, 재실행 하는 역활을 한다.)

이다음 내가 설정한 자바로 바꾸는 작업을 해주어야 한다.

[root@centos jdk1.7.0_80]# which java (자바 위치 확인 명령어)

[root@centos jdk1.7.0_80]# update-alternatives --install "/usr/bin/java" "java" "/usr/java/jdk1.7.0_80/bin/java" 1 (설정한 자바 등록)

[root@centos jdk1.7.0_80]# update-alternatives --config java (설정 한 자바 1로 설정했으니 선택하라고 떴을 때 1 입력)

프로토콜 버퍼
구글에서 만든 오픈소스 직렬화 라이브러리
이기종 서버간의 데이터 통신은 서로 다른 종류의 언어로 개발된 시스템간의 데이터를 전달하는 방식은 text format, binary format 데이터를 이용하는 방법
protobuf-2.5.0.tar.gz

[root@centos jdk1.7.0_80]# cp /media/sf_linux/protobuf-2.5.0.tar.gz /usr/local (local 이라는 폴더에 copy)

[root@centos jdk1.7.0_80]# cd /usr/local (local 폴더로 이동)

[root@centos local]# tar xvfz protobuf-2.5.0.tar.gz (압축 풀기)

[root@centos local]# cd protobuf-2.5.0/ (압축 푼 폴더로 이동)

확장자가 없으면 실행파일 일수도 있다. (configure)

[root@centos local]# ./configure (실행)

[root@centos local]# make

[root@centos local]# make install

[root@centos local]# protoc --version

사용자 그룹 생성 (root 유저에서 하는 것이다.)
[root@centos protobuf-2.5.0]# groupadd hadoop (그룹 생성)
[root@centos protobuf-2.5.0]# cat /etc/group (그룹 확인)

사용자 생성 (그룹은 1차원 그룹이 있고 2차원 그룹이 있다.)
[root@centos protobuf-2.5.0]# useradd -g hadoop -G vboxsf -m hadoop (-g 는 1차그룹 -G 는 2차그룹을 의미한다. vboxsf 는 가상머신용이다. 현장에서 사용안함. -m 은 홈디렉토리를 생성하겠다는 의미이다. 유저이름도 hadoop 으로 생성)

[root@centos protobuf-2.5.0]# cat /etc/passwd (생성한 정보 확인)

패스워드 설정
[root@centos protobuf-2.5.0]# passwd hadoop (당시 1234 로 설정)

하이브에 select 문장을 넣으면 하이브가 자동으로 select 문장을 자바 코드로 변환해준다.

